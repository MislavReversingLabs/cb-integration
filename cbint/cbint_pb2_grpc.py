# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from cbsdk import cbint_pb2 as cbsdk_dot_cbint__pb2


class DetonationStub(object):
    """The greeting service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.get_status = channel.unary_unary(
            '/cbsdk.Detonation/get_status',
            request_serializer=cbsdk_dot_cbint__pb2.Status.SerializeToString,
            response_deserializer=cbsdk_dot_cbint__pb2.StatusResponse.FromString,
        )


class DetonationServicer(object):
    """The greeting service definition.
    """

    def get_status(self, request, context):
        """Sends a greeting
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DetonationServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'get_status': grpc.unary_unary_rpc_method_handler(
            servicer.get_status,
            request_deserializer=cbsdk_dot_cbint__pb2.Status.FromString,
            response_serializer=cbsdk_dot_cbint__pb2.StatusResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'cbsdk.Detonation', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
